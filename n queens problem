#include <stdio.h>
#include <stdlib.h>

#define N 8 

int board[N][N]; 

int is_safe(int row, int col) {
    for (int i = 0; i < row; i++) {
        if (board[i][col]) 
            return 0;
        if (i - row == col - board[i][0]) 
            return 0;
        if (i - row == board[i][0] - col) 
            return 0;
    }
    return 1;
}
void solve_n_queens(int row) {
    if (row == N) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                printf("%d ", board[i][j]);
            }
            printf("\n");
        }
        printf("\n");
        return;
    }

    for (int col = 0; col < N; col++) {
        if (is_safe(row, col)) {
            board[row][col] = 1; // Place the queen
            solve_n_queens(row + 1); // Recur for next row
            board[row][col] = 0; // Backtrack (remove the queen)
        }
    }
}

int main() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            board[i][j] = 0;
        }
    }

    solve_n_queens(0); 

    return 0;
}
