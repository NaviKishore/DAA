#include <stdio.h>

// Function to swap two elements
void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Recursive function to generate permutations
void permute(int arr[], int start, int end) {
    if (start == end) {
        // Print the current permutation
        printf("[");
        for (int i = 0; i <= end; i++) {
            printf("%d", arr[i]);
            if (i < end) {
                printf(", ");
            }
        }
        printf("]\n");
    } else {
        for (int i = start; i <= end; i++) {
            swap(&arr[start], &arr[i]);         // Swap current element with the start
            permute(arr, start + 1, end);      // Recurse for the remaining elements
            swap(&arr[start], &arr[i]);        // Backtrack to restore original order
        }
    }
}

// Main function
int main() {
    int arr[] = {1, 2, 3};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("All possible permutations:\n");
    permute(arr, 0, n - 1);

    return 0;
}
